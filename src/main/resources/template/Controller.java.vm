package ${package}.${moduleName}.controller;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import ${package}.${moduleName}.dto.request.${className}ReqDto;
import ${package}.${moduleName}.dto.response.${className}ResDto;
import ${package}.${moduleName}.service.${className}Service;

/**
 * ${comments}控制器
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
@Api(description = "${comments}接口")
public class ${className}Controller {

    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @ApiOperation(value = "获取${comments}数据列表", notes = "获取${comments}数据列表")
    @PostMapping(value = "/list", produces = MediaType.APPLICATION_JSON_VALUE)
    public Result<${className}ResDto> list(@RequestBody ${className}ReqDto reqDto){
        return Result.success(${classname}Service.select(reqDto));
    }

    /**
     * 查询
     */
    @ApiOperation(value = "获取${comments}数据", notes = "获取${comments}数据")
    @PostMapping(value = "/get", produces = MediaType.APPLICATION_JSON_VALUE)
    public Result<${className}ResDto> get(@RequestBody ${className}ReqDto reqDto){
        return Result.success(${classname}Service.get(reqDto));
    }

    /**
     * 插入
     */
    @ApiOperation(value = "插入${comments}数据", notes = "插入${comments}数据")
    @PostMapping(value = "/insert", produces = MediaType.APPLICATION_JSON_VALUE)
    public Result<Void> insert(@RequestBody ${className}ReqDto reqDto){
        return Result.success(${classname}Service.insert(reqDto));
    }

    /**
     * 修改
     */
    @ApiOperation(value = "修改${comments}数据", notes = "修改${comments}数据")
    @PostMapping(value = "/update", produces = MediaType.APPLICATION_JSON_VALUE)
    public Result<Void> update(@RequestBody ${className}ReqDto reqDto){
        return Result.success(${classname}Service.update(reqDto));
    }

    /**
     * 删除
     */
    @ApiOperation(value = "删除${comments}数据", notes = "删除${comments}数据")
    @PostMapping(value = "/delete", produces = MediaType.APPLICATION_JSON_VALUE)
    public Result<Void> delete(@RequestBody ${className}ReqDto reqDto){
        return Result.success(${classname}Service.delete(reqDto));
    }
}
